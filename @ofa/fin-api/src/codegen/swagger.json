{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Address": {
				"description": "Address document.",
				"properties": {
					"id": {
						"type": "string",
						"description": "Document id as GUID.\nRead-only. Will be generated after creation."
					},
					"createdAt": {
						"type": "string",
						"description": "Document creation time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"updatedAt": {
						"type": "string",
						"description": "Document update time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"street": {
						"type": "string",
						"description": "Street address."
					},
					"street2": {
						"type": "string",
						"description": "Street address line 2."
					},
					"postalCode": {
						"type": "string",
						"description": "Postal code."
					},
					"city": {
						"type": "string",
						"description": "City"
					},
					"countrySubdivision": {
						"type": "string",
						"description": "Country subdivision, like Pirkanmaa."
					},
					"countryCode": {
						"type": "string",
						"description": "Country as ISO 3166-1 alpha-2 code, like FI"
					}
				},
				"required": [
					"postalCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EinvoiceAddress": {
				"description": "Einvoice address document.",
				"properties": {
					"id": {
						"type": "string",
						"description": "Document id as GUID.\nRead-only. Will be generated after creation."
					},
					"createdAt": {
						"type": "string",
						"description": "Document creation time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"updatedAt": {
						"type": "string",
						"description": "Document update time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"operator": {
						"type": "string",
						"description": "Einvoice operator code",
						"example": "E204503"
					},
					"address": {
						"type": "string",
						"description": "Einvoice address - usually OVT-address",
						"example": "003712345678"
					}
				},
				"required": [
					"operator",
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BankAccount": {
				"description": "Bank account document.",
				"properties": {
					"id": {
						"type": "string",
						"description": "Document id as GUID.\nRead-only. Will be generated after creation."
					},
					"createdAt": {
						"type": "string",
						"description": "Document creation time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"updatedAt": {
						"type": "string",
						"description": "Document update time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"iban": {
						"type": "string",
						"description": "IBAN account number."
					},
					"bic": {
						"type": "string",
						"description": "BIC code."
					},
					"bankName": {
						"type": "string",
						"description": "Bank name."
					},
					"currency": {
						"type": "string",
						"description": "Currency as ISO 4217 code, like EUR."
					},
					"preferred": {
						"type": "boolean",
						"description": "Tells if current bank account is preferred one"
					}
				},
				"required": [
					"iban"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partner": {
				"description": "Partner document.",
				"properties": {
					"code": {
						"type": "string",
						"description": "Partner's code."
					},
					"name": {
						"type": "string",
						"description": "Partner's name."
					},
					"businessId": {
						"type": "string",
						"description": "Partner's business id.",
						"example": "1234567-8",
						"pattern": "^[0-9]{7}-[0-9]$"
					},
					"vatNumber": {
						"type": "string",
						"description": "Partner's vat number."
					},
					"email": {
						"type": "string",
						"description": "Partner's email."
					},
					"phone": {
						"type": "string",
						"description": "Partner's phone number."
					},
					"homepage": {
						"type": "string",
						"description": "Partner's homepage."
					},
					"language": {
						"type": "string",
						"description": "Partner's language as ISO 639-1 code, like fi"
					},
					"domicile": {
						"type": "string",
						"description": "Partner's domicile."
					},
					"country": {
						"type": "string",
						"description": "Partner's country as ISO 3166-1 alpha-2 code, like FI"
					},
					"address": {
						"$ref": "#/components/schemas/Address",
						"description": "Partner's address."
					},
					"deliveryAddress": {
						"$ref": "#/components/schemas/Address",
						"description": "Partner's delivery address."
					},
					"invoiceAddress": {
						"$ref": "#/components/schemas/Address",
						"description": "Partner's invoice address."
					},
					"einvoiceAddresses": {
						"items": {
							"$ref": "#/components/schemas/EinvoiceAddress"
						},
						"type": "array",
						"description": "Partner's einvoice addresses"
					},
					"bankAccounts": {
						"items": {
							"$ref": "#/components/schemas/BankAccount"
						},
						"type": "array",
						"description": "TODO: Do we need array?"
					},
					"id": {
						"type": "string",
						"description": "Document id as GUID.\nRead-only. Will be generated after creation."
					},
					"createdAt": {
						"type": "string",
						"description": "Document creation time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"updatedAt": {
						"type": "string",
						"description": "Document update time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NotFoundError": {
				"properties": {
					"code": {
						"type": "string",
						"enum": [
							"NOT_FOUND"
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidationError": {
				"properties": {
					"code": {
						"type": "string",
						"enum": [
							"VALIDATION_ERROR"
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"details": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"code",
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UnauthorizedError": {
				"properties": {
					"code": {
						"type": "string",
						"enum": [
							"UNAUTHORIZED"
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PartnerRequest": {
				"description": "Partner request document.",
				"properties": {
					"code": {
						"type": "string",
						"description": "Partner's code."
					},
					"name": {
						"type": "string",
						"description": "Partner's name."
					},
					"businessId": {
						"type": "string",
						"description": "Partner's business id.",
						"example": "1234567-8",
						"pattern": "^[0-9]{7}-[0-9]$"
					},
					"vatNumber": {
						"type": "string",
						"description": "Partner's vat number."
					},
					"email": {
						"type": "string",
						"description": "Partner's email."
					},
					"phone": {
						"type": "string",
						"description": "Partner's phone number."
					},
					"homepage": {
						"type": "string",
						"description": "Partner's homepage."
					},
					"language": {
						"type": "string",
						"description": "Partner's language as ISO 639-1 code, like fi"
					},
					"domicile": {
						"type": "string",
						"description": "Partner's domicile."
					},
					"country": {
						"type": "string",
						"description": "Partner's country as ISO 3166-1 alpha-2 code, like FI"
					},
					"address": {
						"$ref": "#/components/schemas/Address",
						"description": "Partner's address."
					},
					"deliveryAddress": {
						"$ref": "#/components/schemas/Address",
						"description": "Partner's delivery address."
					},
					"invoiceAddress": {
						"$ref": "#/components/schemas/Address",
						"description": "Partner's invoice address."
					},
					"einvoiceAddresses": {
						"items": {
							"$ref": "#/components/schemas/EinvoiceAddress"
						},
						"type": "array",
						"description": "Partner's einvoice addresses"
					},
					"bankAccounts": {
						"items": {
							"$ref": "#/components/schemas/BankAccount"
						},
						"type": "array",
						"description": "TODO: Do we need array?"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Document": {
				"description": "Base class for document.",
				"properties": {
					"id": {
						"type": "string",
						"description": "Document id as GUID.\nRead-only. Will be generated after creation."
					},
					"createdAt": {
						"type": "string",
						"description": "Document creation time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"updatedAt": {
						"type": "string",
						"description": "Document update time in ISO 8601 format. Ex. 2024-12-18T14:32:05Z.\nMay be read-only depending on the implementation."
					},
					"type": {
						"type": "string",
						"description": "Document type."
					},
					"date": {
						"type": "string",
						"description": "Document date in ISO date format."
					},
					"title": {
						"type": "string",
						"description": "Document title."
					},
					"description": {
						"type": "string",
						"description": "Document description."
					},
					"status": {
						"type": "string",
						"description": "Document status. TODO: string -> object"
					},
					"partner": {
						"$ref": "#/components/schemas/Partner"
					},
					"invoice": {
						"description": "TODO here as property or own interface extending this document interface?"
					},
					"accounting": {
						"description": "TODO add Accounting interface"
					},
					"transactions": {
						"items": {},
						"type": "array"
					},
					"entries": {
						"items": {},
						"type": "array"
					},
					"files": {
						"items": {},
						"type": "array"
					},
					"history": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"type",
					"date",
					"title",
					"description",
					"status",
					"partner",
					"invoice",
					"accounting",
					"transactions",
					"entries",
					"files",
					"history"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer"
			}
		}
	},
	"info": {
		"title": "@ofa/fin-api",
		"version": "1.0.0",
		"description": "Open API definition for Open Financial API (FIN)",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/api/v1/partner/{partnerId}": {
			"get": {
				"operationId": "GetPartner",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Partner"
								},
								"examples": {
									"Partner with all data": {
										"value": {
											"id": "123e4567-e89b-12d3-a456-426614174000",
											"createdAt": "2024-12-18T14:32:05Z",
											"updatedAt": "2024-12-18T14:32:05Z",
											"code": "PARTNER123",
											"name": "Oy Yritys Ab",
											"businessId": "1234567-8",
											"vatNumber": "FI12345678",
											"email": "contact@yritys.fi",
											"phone": "+358401234567",
											"homepage": "https://yritys.fi",
											"language": "fi",
											"domicile": "Helsinki",
											"country": "FI",
											"address": {
												"street": "Testikatu 8",
												"postalCode": "00100",
												"city": "Helsinki",
												"countryCode": "FI"
											},
											"deliveryAddress": {
												"street": "Toimituskatu 3",
												"postalCode": "00120",
												"city": "Helsinki",
												"countryCode": "FI"
											},
											"invoiceAddress": {
												"street": "Laskutuskatu 5",
												"postalCode": "00150",
												"city": "Helsinki",
												"countryCode": "FI"
											},
											"einvoiceAddresses": [
												{
													"operator": "E204503",
													"address": "003712345678"
												}
											],
											"bankAccounts": [
												{
													"iban": "FI1234567890123456",
													"bic": "OKOYFIHH"
												}
											]
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"$ref": "#/components/schemas/NotFoundError"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get partner by id.",
				"tags": [
					"Partners"
				],
				"security": [],
				"parameters": [
					{
						"description": "The partners's identifier",
						"in": "path",
						"name": "partnerId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Obligatory client version header",
						"in": "header",
						"name": "clientVersion",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Obligatory locale query parameter",
						"in": "query",
						"name": "locale",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdatePartner",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Partner"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"$ref": "#/components/schemas/NotFoundError"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update partner by id.",
				"tags": [
					"Partners"
				],
				"security": [],
				"parameters": [
					{
						"description": "The partner's identifier",
						"in": "path",
						"name": "partnerId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Obligatory client version header",
						"in": "header",
						"name": "clientVersion",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Obligatory locale query parameter",
						"in": "query",
						"name": "locale",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Updated partner data",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PartnerRequest",
								"description": "Updated partner data"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeletePartner",
				"responses": {
					"204": {
						"description": "No Content"
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"$ref": "#/components/schemas/NotFoundError"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete partner by id.",
				"tags": [
					"Partners"
				],
				"security": [],
				"parameters": [
					{
						"description": "The partner's identifier",
						"in": "path",
						"name": "partnerId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Obligatory client version header",
						"in": "header",
						"name": "clientVersion",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Obligatory locale query parameter",
						"in": "query",
						"name": "locale",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/partner": {
			"post": {
				"operationId": "CreatePartner",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Partner"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"$ref": "#/components/schemas/ValidationError"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"$ref": "#/components/schemas/UnauthorizedError"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Create a new partner.",
				"tags": [
					"Partners"
				],
				"security": [],
				"parameters": [
					{
						"description": "Obligatory client version header",
						"in": "header",
						"name": "clientVersion",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Obligatory locale query parameter",
						"in": "query",
						"name": "locale",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Partner data",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PartnerRequest",
								"description": "Partner data"
							},
							"example": {
								"code": "PARTNER123",
								"name": "Oy Yritys Ab",
								"businessId": "1234567-8",
								"vatNumber": "FI12345678",
								"email": "contact@yritys.fi",
								"phone": "+358401234567",
								"language": "fi",
								"domicile": "Helsinki",
								"country": "FI"
							}
						}
					}
				}
			}
		},
		"/api/v01/document/{id}": {
			"get": {
				"operationId": "FindById",
				"responses": {
					"200": {
						"description": "The document if found.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Document"
								}
							}
						}
					}
				},
				"description": "Gets a document from storage based on its id.",
				"tags": [
					"Document"
				],
				"security": [],
				"parameters": [
					{
						"description": "Unique identifier for the document.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/about/swagger/main": {
			"get": {
				"operationId": "Swagger",
				"responses": {
					"200": {
						"description": "The the definition of the API as an Open API definition (swagger).",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Gets the main Open API specification for the API.",
				"tags": [
					"About"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"tags": [
		{
			"name": "About",
			"description": "General information and metadata about the API. These methods are anonymous - do not require authentication."
		}
	]
}